{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../student.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction EditStudentComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nexport class EditStudentComponent {\n  constructor(activatedRoute, studentService) {\n    this.activatedRoute = activatedRoute;\n    this.studentService = studentService;\n    this.activatedRoute.params.subscribe(param => {\n      alert('Przekazano parametr: ' + param[\"id\"]);\n      this.studentService.getStudentByID(param[\"id\"]).subscribe(data => {\n        this.student = data;\n        console.log(this.student);\n      });\n    });\n  }\n}\n_class = EditStudentComponent;\n_class.ɵfac = function EditStudentComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.StudentService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-edit-student\"]],\n  decls: 15,\n  vars: 4,\n  consts: [[4, \"ngIf\"], [1, \"form-label\"], [\"name\", \"studentName\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"studentEmail\", \"type\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [2, \"margin-top\", \"15px\"], [1, \"btn\", \"btn-outline-success\"]],\n  template: function EditStudentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, EditStudentComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n      i0.ɵɵelementStart(1, \"h4\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"div\")(5, \"label\", 1);\n      i0.ɵɵtext(6, \"Imi\\u0119 i nazwisko studenta: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function EditStudentComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.student.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\", 1);\n      i0.ɵɵtext(10, \"Adres email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function EditStudentComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.student.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"button\", 5);\n      i0.ɵɵtext(14, \"Zapisz\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.student);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Edytuj studenta - \", ctx.student.name, \"\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.student.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.student.email);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementContainer","EditStudentComponent","constructor","activatedRoute","studentService","params","subscribe","param","alert","getStudentByID","data","student","console","log","ɵɵdirectiveInject","i1","ActivatedRoute","i2","StudentService","selectors","decls","vars","consts","template","EditStudentComponent_Template","rf","ctx","ɵɵtemplate","EditStudentComponent_ng_container_0_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditStudentComponent_Template_input_ngModelChange_7_listener","$event","name","EditStudentComponent_Template_input_ngModelChange_11_listener","email","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["/Users/nikola/student-manager-angular/Student-Manager-Angular/src/app/edit-student/edit-student.component.ts","/Users/nikola/student-manager-angular/Student-Manager-Angular/src/app/edit-student/edit-student.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StudentService } from '../student.service';\nimport { Student } from '../students';\n\n@Component({\n  selector: 'app-edit-student',\n  templateUrl: './edit-student.component.html',\n  styleUrls: ['./edit-student.component.css']\n})\nexport class EditStudentComponent {\n  //Napisac request typu GET do pobrania danych studenta o określonym id - StudentService\n  //Upewnimy sie ze dane sa w porzadku \n  //Zbudujemy draft formularza edycji\n  //Bootstrap -> ostylowanie formularza\n  student!: Student;\n\n  constructor(private activatedRoute: ActivatedRoute, private studentService: StudentService) {\n    this.activatedRoute.params.subscribe(param => {\n      alert('Przekazano parametr: ' + param[\"id\"]);\n      this.studentService.getStudentByID(param[\"id\"]).subscribe(data => {\n        this.student = data;\n        console.log(this.student);\n      })\n    });\n\n  }\n\n}\n","<ng-container *ngIf=\"student\"></ng-container>\n\n<h4>Edytuj studenta - {{student.name}}</h4>\n\n<form>\n    <div>\n        <label class=\"form-label\">Imię i nazwisko studenta: </label>\n        <input name=\"studentName\" [(ngModel)]=\"student.name\" class=\"form-control\" type=\"text\">\n    </div>\n\n    <div>\n        <label class=\"form-label\">Adres email: </label>\n        <input name=\"studentEmail\" [(ngModel)]=\"student.email\" class=\"form-control\" type=\"email\">\n    </div>\n\n    <div style=\"margin-top: 15px;\">\n        <button class=\"btn btn-outline-success\">Zapisz</button>\n    </div>\n</form>\n"],"mappings":";;;;;;;;ICAAA,EAAA,CAAAC,kBAAA,GAA6C;;;ADU7C,OAAM,MAAOC,oBAAoB;EAO/BC,YAAoBC,cAA8B,EAAUC,cAA8B;IAAtE,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,cAAc,GAAdA,cAAc;IACxE,IAAI,CAACD,cAAc,CAACE,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MAC3CC,KAAK,CAAC,uBAAuB,GAAGD,KAAK,CAAC,IAAI,CAAC,CAAC;MAC5C,IAAI,CAACH,cAAc,CAACK,cAAc,CAACF,KAAK,CAAC,IAAI,CAAC,CAAC,CAACD,SAAS,CAACI,IAAI,IAAG;QAC/D,IAAI,CAACC,OAAO,GAAGD,IAAI;QACnBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ;;SAhBWV,oBAAoB;;mBAApBA,MAAoB,EAAAF,EAAA,CAAAe,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAjB,EAAA,CAAAe,iBAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;;QAApBjB,MAAoB;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVjC1B,EAAA,CAAA4B,UAAA,IAAAC,4CAAA,0BAA6C;MAE7C7B,EAAA,CAAA8B,cAAA,SAAI;MAAA9B,EAAA,CAAA+B,MAAA,GAAkC;MAAA/B,EAAA,CAAAgC,YAAA,EAAK;MAE3ChC,EAAA,CAAA8B,cAAA,WAAM;MAE4B9B,EAAA,CAAA+B,MAAA,sCAA0B;MAAA/B,EAAA,CAAAgC,YAAA,EAAQ;MAC5DhC,EAAA,CAAA8B,cAAA,eAAsF;MAA5D9B,EAAA,CAAAiC,UAAA,2BAAAC,6DAAAC,MAAA;QAAA,OAAAR,GAAA,CAAAf,OAAA,CAAAwB,IAAA,GAAAD,MAAA;MAAA,EAA0B;MAApDnC,EAAA,CAAAgC,YAAA,EAAsF;MAG1FhC,EAAA,CAAA8B,cAAA,UAAK;MACyB9B,EAAA,CAAA+B,MAAA,qBAAa;MAAA/B,EAAA,CAAAgC,YAAA,EAAQ;MAC/ChC,EAAA,CAAA8B,cAAA,gBAAyF;MAA9D9B,EAAA,CAAAiC,UAAA,2BAAAI,8DAAAF,MAAA;QAAA,OAAAR,GAAA,CAAAf,OAAA,CAAA0B,KAAA,GAAAH,MAAA;MAAA,EAA2B;MAAtDnC,EAAA,CAAAgC,YAAA,EAAyF;MAG7FhC,EAAA,CAAA8B,cAAA,cAA+B;MACa9B,EAAA,CAAA+B,MAAA,cAAM;MAAA/B,EAAA,CAAAgC,YAAA,EAAS;;;MAhBhDhC,EAAA,CAAAuC,UAAA,SAAAZ,GAAA,CAAAf,OAAA,CAAa;MAExBZ,EAAA,CAAAwC,SAAA,GAAkC;MAAlCxC,EAAA,CAAAyC,kBAAA,uBAAAd,GAAA,CAAAf,OAAA,CAAAwB,IAAA,KAAkC;MAKJpC,EAAA,CAAAwC,SAAA,GAA0B;MAA1BxC,EAAA,CAAAuC,UAAA,YAAAZ,GAAA,CAAAf,OAAA,CAAAwB,IAAA,CAA0B;MAKzBpC,EAAA,CAAAwC,SAAA,GAA2B;MAA3BxC,EAAA,CAAAuC,UAAA,YAAAZ,GAAA,CAAAf,OAAA,CAAA0B,KAAA,CAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}